@model Predictions.ViewModels.AddPredictionsViewModel

@{
    ViewBag.Title = "AddPrediction";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Добавить прогноз</h1>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "addPredictionsForm", @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <h2>@Model.TourInfo.TourId тур</h2>
        @Html.HiddenFor(model => Model.TourInfo.TourId)
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="form-group">
                        @* <p> inside <label> *@
                        <label class="col-md-3 control-label">
                            <p class="pull-left">@Html.DisplayFor(model => model.TourInfo.StartDate) - @Html.DisplayFor(model => @Model.TourInfo.EndDate)</p>
                        </label>
                        <div class="col-md-2 pull-right">
                            @Html.DropDownListFor(model => model.SelectedExpertId,
                               Model.Expertlist,
                               new { @class = "selectpicker", @data_width = "auto", @title = "Выбрать эксперта" })
                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12">
                            <table class="table table-hover">
                                <tbody>
                                    <tr>
                                        <th>Дата</th>
                                        <th>Дома</th>
                                        <th>В гостях</th>
                                        <th>Прогноз</th>
                                    </tr>
                                    @for (int i = 0; i <= Model.Matchlist.Count - 1; i++)
                                    {
                                        @Html.HiddenFor(model => Model.Matchlist[i].Id)
                                        <tr>
                                            <td>@Html.DisplayFor(model => Model.Matchlist[i].Date)</td>
                                            <td>@Html.DisplayFor(model => Model.Matchlist[i].HomeTeamTitle)</td>
                                            <td>@Html.DisplayFor(model => Model.Matchlist[i].AwayTeamTitle)</td>
                                            <td>
                                                <div class="form-group">
                                                    @Html.EditorFor(model => Model.EditPredictionsValuelist[i].Value, new { htmlAttributes = new { @class = "form-control" } })
                                                    <span class="input-group-addon">
                                                        <i data-toggle="tooltip" title="Error msg here" data-container="body">
                                                            @Html.ValidationMessageFor(model => Model.EditPredictionsValuelist[i].Value, "", new { @class = "help-inline" })
                                                        </i>
                                                    </span>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                    <tr><td><input type="submit" class="btn btn-info" value="Сохранить прогноз"></td></tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>




        <script type="text/javascript">

            //$(document).ready(function () {

            //    $.validator.addMethod("regex", function (value, element, regexpr) {
            //        return regexpr.test(value);
            //    }, "Некорректный счет");

            //    $('#addPredictionForm').validate({
            //        highlight: function (element) {
            //            $(element).closest('.control-group').removeClass('success').addClass('error');
            //        },
            //        success: function (element) {
            //            element.text('OK!').addClass('valid')
            //                .closest('.control-group').removeClass('error').addClass('success');
            //        }
            //    });

            //    //$("input[name^='InputPredictionValuelist']").each(function () {
            //    $("input[name^='InputData']").each(function () {
            //        $(this).rules('add', {
            //            regex: /^$|^[0-9]{1,2}:[0-9]{1,2}$/
            //        });
            //    });
            //});

            //$(document).ready(function () {
            //    $.validator.addMethod("regex", function (value, element, regexpr) {
            //        return regexpr.test(value);
            //    }, "Неверный счет");

            //    $("input[name^='input']").validate({
            //        rules: {
            //            required: true,
            //            regex: /^[0-9]+$/
            //        }
            //    });
            //});
        </script>

}


