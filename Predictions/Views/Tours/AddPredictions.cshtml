@model Predictions.ViewModels.AddPredictionsViewModel

@{
    ViewBag.Title = "AddPrediction";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Добавить прогноз</h1>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "addPredictionForm" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="container">
                <h2>@Model.Tour.TourId Тур</h2>
                <div class="panel panel-default">
                    <div class="panel-heading">@Model.Tour.StartDate - @Model.Tour.EndDate</div>
                    <div class="panel-body">
                        <div class="col-md-10">
                            <table class="table table-hover">
                                <tbody>
                                    <tr>
                                        <th class="col-md-2">Дата</th>
                                        <th class="col-md-1">Дома</th>
                                        <th class="col-md-1">В гостях</th>
                                        <th class="col-md-1">Прогноз</th>
                                    </tr>
                                    @for (int i = 0; i <= Model.Tour.Matches.Count - 1; i++)
                                    {
                                        @Html.HiddenFor(model => Model.Tour.Matches[i].MatchId)
                                        <tr>
                                            <td class="col-md-2">@Model.Tour.Matches.ElementAt(i).Date</td>
                                            <td class="col-md-1">@Model.Tour.Matches.ElementAt(i).HomeTeam.Title</td>
                                            <td class="col-md-1">@Model.Tour.Matches.ElementAt(i).AwayTeam.Title</td>
                                            <td class="col-md-1">
                                                @Html.EditorFor(model => model.InputPredictionValuelist[i],
                                                    new { htmlAttributes = new { @class = "form-control"} })
                                                @Html.ValidationMessageFor(model => model.InputPredictionValuelist[i])
                                            </td>
                                        </tr>
                                    }
                                    <tr><td><input type="submit" class="btn btn-info" value="Сохранить прогноз"></td></tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="col-md-2">@Html.DropDownListFor(model => model.SelectedExpertId, new SelectList(Model.Expertlist, "ExpertId", "Nickname"),
                                                                                                     new { @class = "form-control", placeholder = "Дома" })
                        </div>
                    </div>
                </div>
        </div>
    </div>



    <script type="text/javascript">

        $(document).ready(function () {

            $.validator.addMethod("regex", function (value, element, regexpr) {
                return regexpr.test(value);
            }, "Некорректный счет");

            $('#addPredictionForm').validate({
                submitHandler: function (form) { // for demo
                    alert('valid form'); // for demo
                    return false; // for demo
                }
            });

            $("input[name^='Input']").each(function () {
                $(this).rules('add', {
                    regex: /^$|^[0-9]{1,2}:[0-9]{1,2}$/
                });
            });

        });

       


        //$(document).ready(function () {
        //    $.validator.addMethod("regex", function (value, element, regexpr) {
        //        return regexpr.test(value);
        //    }, "Неверный счет");

        //    $("input[name^='input']").validate({
        //        rules: {
        //            required: true,
        //            regex: /^[0-9]+$/
        //        }
        //    });
        //});
    </script>

}


